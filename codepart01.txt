provider "aws" {
  region     = "ap-south-1"
  profile    = "myrahul"
}


resource "aws_s3_bucket" "bucket" {
	bucket = "cloudtask2-bucketofrahul123"
	acl = "private"
    force_destroy = "true"  
    versioning {
		enabled = true
	}
}


resource "null_resource" "one"  {
	depends_on = [aws_s3_bucket.bucket,]
	provisioner "local-exec" {
	command = "git clone https://github.com/RahulRastogi1104/imaget3cloud.git"
  	}
}

resource "aws_s3_bucket_object" "file_upload" {
	depends_on = [aws_s3_bucket.bucket , null_resource.one]
	bucket = aws_s3_bucket.bucket.id
    key = "sch.jpg"    
	source = "imaget3cloud/sch.jpg"
    acl = "public-read"
}





resource "aws_cloudfront_distribution" "distribution" {
	depends_on = [aws_s3_bucket.bucket , null_resource.one ]
	origin {
		domain_name = aws_s3_bucket.bucket.bucket_regional_domain_name
		origin_id   = "S3-cloudtask2-bucketofrahul123-id"


		custom_origin_config {
			http_port = 80
			https_port = 80
			origin_protocol_policy = "match-viewer"
			origin_ssl_protocols = ["TLSv1", "TLSv1.1", "TLSv1.2"]
		}
	}
 
	enabled = true
  
	default_cache_behavior {
		allowed_methods = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		cached_methods = ["GET", "HEAD"]
		target_origin_id = "S3-cloudtask2-bucketofrahul123-id"
 
		forwarded_values {
			query_string = false
 
			cookies {
				forward = "none"
			}
		}
		viewer_protocol_policy = "allow-all"
		min_ttl = 0
		default_ttl = 3600
		max_ttl = 86400
	}
 
	restrictions {
		geo_restriction {
 
			restriction_type = "none"
		}
	}
 
	viewer_certificate {
		cloudfront_default_certificate = true
	}
}



output "domain-name" {
	value = aws_cloudfront_distribution.distribution.domain_name
}